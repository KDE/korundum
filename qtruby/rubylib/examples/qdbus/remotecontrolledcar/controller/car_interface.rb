=begin
**
** Copyright (C) 2004-2005 Trolltech AS. All rights reserved.
**
** This file is part of the example classes of the Qt Toolkit.
**
** This file may be used under the terms of the GNU General Public
** License version 2.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of
** this file.  Please review the following information to ensure GNU
** General Public Licensing requirements will be met:
** http://www.trolltech.com/products/qt/opensource.html
**
** If you are unsure which license is appropriate for your use, please
** review the following information:
** http://www.trolltech.com/products/qt/licensing.html or contact the
** sales department at sales@trolltech.com.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**

** Translated to QtRuby by Richard Dale
=end
	 * This file was generated by dbusxml2cpp version 0.6
	 * Command line was: dbusxml2cpp -c CarInterface -p car_interface_p.h:car_interface.cpp car.xml
	 *
	 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
	 *
	 * This is an auto-generated file.
	 * Do not edit! All changes made to it will be lost.
	 */
	
	
	
	 * Proxy class for interface com.trolltech.Examples.CarInterface
	 */
class CarInterface < Qt::DBusAbstractInterface
	    static inline  *staticInterfaceName()
	    { return "com.trolltech.Examples.CarInterface"; end
	
	
	    ~CarInterface()
	
	public Q_SLOTS: // METHODS
	    inline Qt::DBusReply<void> accelerate()
	    {
	        Qt::List<Qt::Variant> argumentList
	        return callWithArgumentList(Qt::DBus::Block, Qt::Latin1String("accelerate"), argumentList)
	    end
	
	    inline Qt::DBusReply<void> decelerate()
	    {
	        Qt::List<Qt::Variant> argumentList
	        return callWithArgumentList(Qt::DBus::Block, Qt::Latin1String("decelerate"), argumentList)
	    end
	
	    inline Qt::DBusReply<void> turnLeft()
	    {
	        Qt::List<Qt::Variant> argumentList
	        return callWithArgumentList(Qt::DBus::Block, Qt::Latin1String("turnLeft"), argumentList)
	    end
	
	    inline Qt::DBusReply<void> turnRight()
	    {
	        Qt::List<Qt::Variant> argumentList
	        return callWithArgumentList(Qt::DBus::Block, Qt::Latin1String("turnRight"), argumentList)
	    end
	
	Q_SIGNALS: // SIGNALS
	    void crashed()
	
	namespace com {
	  namespace trolltech {
	    namespace Examples {
	      typedef ::CarInterface CarInterface
	    end
	  end
	 * This file was generated by dbusxml2cpp version 0.6
	 * Command line was: dbusxml2cpp -c CarInterface -p car_interface_p.h:car_interface.cpp car.xml
	 *
	 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
	 *
	 * This is an auto-generated file.
	 * This file may have been hand-edited. Look for HAND-EDIT comments
	 * before re-generating it.
	 */
	
	
	 * Implementation of interface class CarInterface
	 */
	
	def initialize(service, path, connection, Qt::Object *parent)
	    super(service, path, staticInterfaceName(), connection, parent)
	end
	
	~CarInterface()
	end
	
end
